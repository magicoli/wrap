#!/bin/sh

[ "$convertfolder" ] && destfolder="$convertfolder" || destfolder=. 
[ "$size" ] || size=480x270
[ "$bitrate" ] || bitrate=800k

PGM=`basename "$0"`
TMP="/tmp/$PGM.$$"
ORIPWD=$PWD

DEBUG=yes
# STAMP=`date +"%Y%m%d-%H%M%S" 2>/dev/null`
PATH=$(dirname "$0"):$PATH

helpers="$(which helpers)"
[ "$helpers" ] && . $helpers
log "help functions loaded" 2>/dev/null || exit 1

uname -a | grep -q "Darwin Kernel Version 9.8.0" && os=leopard

OPTS="b:d:o:s:HVQ"

PAR=`echo $OPTS|sed 's/.://g'|grep -v "^$"|sed "s/\([a-zA-Z0-9]*\)/[-\\1]/g" `
PAROPT=`echo $OPTS | sed "s/-://" | sed 's/\(.\)/\\1\//g' \
    | sed 's/\(.\)\/:\//[-\\1 <value>] /g' \
    | sed "s/.\///g" `
USAGE=`echo $PGM $PAR $PAROPT "[<args>]" | sed "s/  / /g"`

HELP="
      -t <template>
      -H display this help
      -V verbose mode
      -Q quiet mode

sorry, helpman is in a minimalist mood"

while getopts $OPTS PARAM
  do
    case $PARAM in
	"?")
	    ERROR=1
	    ;;
	-)
	    case $OPTARG in
		help)
		    help
		    ;;
		*)
		    printf "$PGM: illegal option -- $OPTARG"
#		    ERROR=1
	    esac
	    ;;
	d)
	    destfolder=$OPTARG
	    ;;
	s)
	    size=$OPTARG
	    ;;
	b)
	    bitrate=$OPTARG
	    ;;
	o)
	    output=$OPTARG
	    ;;
	H)
	    help
	    ;;
	V)
	    STDERR="&1"
	    DEBUG=yes
	    ;;
	Q)
	    STDOUT="/dev/null"
		QUIET=yes
	    DEBUG=no
	            ;;
	*)
	    VALUES="$VALUES $PARAM"
	    LASTVAL=$PARAM
    esac

done 2>/dev/null

shift `expr $OPTIND - 1`

[ "$ERROR" ] && { 
    usage
    end $ERROR "error $ERROR, type '$PGM --help' for more info"
}

[ ! "$1" ] && end 2>/dev/null

cd "$destfolder" || end 4
destfolder="$PWD"

echo "$size" | egrep -q "^[0-9]+x[0-9]+$" || {
    [ "$size" = "o" ] || end 5 "invalid size, use '<width>x<height>', for example 640x480"
}

TMP="$destfolder/.$PGM.$$"

errors=0

for file in "$@"
do
    cd "$ORIPWD"
    cd "$(dirname "$file")" || break

    command=ffmpeg
    name=$(basename "$file" | sed "s/\.[a-zA-Z0-9]*$//")
    tmpfile=$TMP.processing.mp4
    ext=$(echo "$file" | sed "s/.*\.//")
    alias=$TMP.alias.$ext
    rm -f $tmpfile $alias
    ln -s "$PWD/$(basename "$file")" $alias || break 
    if [ "$size" = "o" ]
    then
	convertsize=$(ffmpeg -i $alias 2>&1 | egrep "Stream #.*Video:" | sed "s/.*[^0-9]\([0-9]*x[0-9]*\)[^0-9].*/\\1/")
    else
	convertsize=$size
    fi

    command="$command -i $alias"
    [ ! $output ] && output=$destfolder/$name.mp4
    [ -f "$output" ] && echo "$PGM: $output exists" && continue
    
    case $os in 
	leopard)
	    acodec="aac -strict -2"
	    directpred="-direct-pred"
	    osparams=""
	    ;;
	*)
	    acodec=libfaac
	    directpred="-directpred"
	    osparams="-cmp +chroma -partitions +parti8x8+parti4x4+partp8x8+partb8x8 -flags2 +bpyramid+mixed_refs+wpred+dct8x8+fastpskip -flags2 -wpred-dct8x8 -level 30"
	    ;;
    esac
    command="$command -acodec $acodec -ab 160000 -s $convertsize -vcodec libx264 -coder 1 -flags +loop $osparams -me_method umh -subq 8 -me_range 16 -g 250 -keyint_min 25 -sc_threshold 40 -i_qfactor 0.71 -b_strategy 2 -qcomp 0.6 -qmin 10 -qmax 51 -qdiff 4 -bf 3 -refs 5 $directpred 3 -trellis 1 -wpredp 2 -coder 0 -bf 0 -refs 1 -level 30 -maxrate 10000000 -bufsize 10000000 -wpredp 0 -b $bitrate -threads 0 -f mp4"
    $command "$tmpfile"

    [ -f $tmpfile ] && mv "$tmpfile" "$output" || {
	errors=$(($errors + 1))
	log 1 Could not make $tmpfile
    }
    unset output
done

#echo "errors $errors"
[ $errors -eq 1 ] && errors="$errors $errors error" || {
    [ $errors -gt 1 ] && errors="$errors $errors errors"
}
end $errors
